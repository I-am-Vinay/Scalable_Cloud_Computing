[2025-07-09 10:15:24,652] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2025-07-09 10:15:24,704] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 1 and epoch zk version is now 1 (kafka.controller.KafkaController)
[2025-07-09 10:15:24,711] INFO [Controller id=0] Creating FeatureZNode at path: /feature with contents: FeatureZNode(2,Enabled,Map()) (kafka.controller.KafkaController)
[2025-07-09 10:15:24,775] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2025-07-09 10:15:24,805] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2025-07-09 10:15:24,810] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2025-07-09 10:15:24,819] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2025-07-09 10:15:24,851] INFO [Controller id=0] Initialized broker epochs cache: HashMap(0 -> 25) (kafka.controller.KafkaController)
[2025-07-09 10:15:24,867] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2025-07-09 10:15:24,883] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2025-07-09 10:15:24,906] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2025-07-09 10:15:24,909] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2025-07-09 10:15:24,909] INFO [Controller id=0] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2025-07-09 10:15:24,909] INFO [Controller id=0] Current list of topics in the cluster: HashSet() (kafka.controller.KafkaController)
[2025-07-09 10:15:24,910] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2025-07-09 10:15:24,916] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2025-07-09 10:15:24,916] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2025-07-09 10:15:24,916] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2025-07-09 10:15:24,917] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet() (kafka.controller.TopicDeletionManager)
[2025-07-09 10:15:24,919] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2025-07-09 10:15:24,969] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2025-07-09 10:15:24,970] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2025-07-09 10:15:24,981] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker ip-172-31-33-79.ec2.internal:9092 (id: 0 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to ip-172-31-33-79.ec2.internal:9092 (id: 0 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:299)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2025-07-09 10:15:24,993] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2025-07-09 10:15:24,996] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> HashMap() (kafka.controller.ZkReplicaStateMachine)
[2025-07-09 10:15:24,996] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2025-07-09 10:15:24,997] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2025-07-09 10:15:25,001] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> HashMap() (kafka.controller.ZkPartitionStateMachine)
[2025-07-09 10:15:25,002] INFO [Controller id=0] Ready to serve as the new controller with epoch 1 (kafka.controller.KafkaController)
[2025-07-09 10:15:25,018] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2025-07-09 10:15:25,019] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2025-07-09 10:15:25,023] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2025-07-09 10:15:25,023] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2025-07-09 10:15:25,024] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2025-07-09 10:15:25,048] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2025-07-09 10:15:25,098] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker ip-172-31-33-79.ec2.internal:9092 (id: 0 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to ip-172-31-33-79.ec2.internal:9092 (id: 0 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:299)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2025-07-09 10:15:25,201] INFO [RequestSendThread controllerId=0] Controller 0 connected to ip-172-31-33-79.ec2.internal:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2025-07-09 10:15:30,050] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2025-07-09 10:15:30,050] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2025-07-09 10:20:30,053] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2025-07-09 10:20:30,053] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2025-07-09 10:21:28,022] INFO [Controller id=0] Shutting down broker 0 (kafka.controller.KafkaController)
[2025-07-09 10:21:28,022] DEBUG [Controller id=0] All shutting down brokers: 0 (kafka.controller.KafkaController)
[2025-07-09 10:21:28,023] DEBUG [Controller id=0] Live brokers:  (kafka.controller.KafkaController)
[2025-07-09 10:21:28,025] TRACE [Controller id=0] All leaders =  (kafka.controller.KafkaController)
[2025-07-09 10:21:28,179] INFO [ControllerEventThread controllerId=0] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2025-07-09 10:21:28,179] INFO [ControllerEventThread controllerId=0] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2025-07-09 10:21:28,179] INFO [ControllerEventThread controllerId=0] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2025-07-09 10:21:28,180] DEBUG [Controller id=0] Resigning (kafka.controller.KafkaController)
[2025-07-09 10:21:28,180] DEBUG [Controller id=0] Unregister BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2025-07-09 10:21:28,181] INFO [PartitionStateMachine controllerId=0] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2025-07-09 10:21:28,182] INFO [ReplicaStateMachine controllerId=0] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2025-07-09 10:21:28,183] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2025-07-09 10:21:28,183] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2025-07-09 10:21:28,183] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2025-07-09 10:21:28,185] INFO [Controller id=0] Resigned (kafka.controller.KafkaController)
[2025-07-09 10:28:35,130] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2025-07-09 10:28:35,192] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 1 and epoch zk version is now 1 (kafka.controller.KafkaController)
[2025-07-09 10:28:35,195] INFO [Controller id=0] Creating FeatureZNode at path: /feature with contents: FeatureZNode(2,Enabled,Map()) (kafka.controller.KafkaController)
[2025-07-09 10:28:35,248] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2025-07-09 10:28:35,256] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2025-07-09 10:28:35,260] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2025-07-09 10:28:35,263] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2025-07-09 10:28:35,278] INFO [Controller id=0] Initialized broker epochs cache: HashMap(0 -> 25) (kafka.controller.KafkaController)
[2025-07-09 10:28:35,298] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2025-07-09 10:28:35,320] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2025-07-09 10:28:35,331] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2025-07-09 10:28:35,333] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2025-07-09 10:28:35,333] INFO [Controller id=0] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2025-07-09 10:28:35,334] INFO [Controller id=0] Current list of topics in the cluster: HashSet() (kafka.controller.KafkaController)
[2025-07-09 10:28:35,334] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2025-07-09 10:28:35,348] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2025-07-09 10:28:35,349] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2025-07-09 10:28:35,349] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2025-07-09 10:28:35,350] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet() (kafka.controller.TopicDeletionManager)
[2025-07-09 10:28:35,353] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2025-07-09 10:28:35,388] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2025-07-09 10:28:35,388] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2025-07-09 10:28:35,394] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker ip-172-31-33-79.ec2.internal:9092 (id: 0 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to ip-172-31-33-79.ec2.internal:9092 (id: 0 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:299)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2025-07-09 10:28:35,396] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2025-07-09 10:28:35,399] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> HashMap() (kafka.controller.ZkReplicaStateMachine)
[2025-07-09 10:28:35,400] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2025-07-09 10:28:35,400] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2025-07-09 10:28:35,406] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> HashMap() (kafka.controller.ZkPartitionStateMachine)
[2025-07-09 10:28:35,406] INFO [Controller id=0] Ready to serve as the new controller with epoch 1 (kafka.controller.KafkaController)
[2025-07-09 10:28:35,415] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2025-07-09 10:28:35,415] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2025-07-09 10:28:35,419] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2025-07-09 10:28:35,419] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2025-07-09 10:28:35,420] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2025-07-09 10:28:35,435] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2025-07-09 10:28:35,500] INFO [RequestSendThread controllerId=0] Controller 0 connected to ip-172-31-33-79.ec2.internal:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2025-07-09 10:28:40,436] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2025-07-09 10:28:40,437] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2025-07-09 10:30:43,712] INFO [Controller id=0] New topics: [Set(amazon-fashion-reviews)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(amazon-fashion-reviews,Some(3NMXFLvxSY2ePaebuKe5Gw),Map(amazon-fashion-reviews-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2025-07-09 10:30:43,713] INFO [Controller id=0] New partition creation callback for amazon-fashion-reviews-0 (kafka.controller.KafkaController)
[2025-07-09 10:30:43,982] INFO [Controller id=0] New topics: [Set(__consumer_offsets)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(__consumer_offsets,Some(Fl-YpH8RSemEdeaqjanlmA),HashMap(__consumer_offsets-22 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-30 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-25 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-35 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-37 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-38 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-13 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-8 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-21 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-4 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-27 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-7 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-9 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-46 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-41 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-33 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-23 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-49 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-47 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-16 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-28 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-31 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-36 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-42 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-3 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-18 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-15 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-24 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-17 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-48 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-19 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-11 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-2 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-43 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-6 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-14 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-20 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-44 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-39 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-12 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-45 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-1 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-5 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-26 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-29 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-34 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-10 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-32 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-40 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2025-07-09 10:30:43,983] INFO [Controller id=0] New partition creation callback for __consumer_offsets-22,__consumer_offsets-30,__consumer_offsets-25,__consumer_offsets-35,__consumer_offsets-37,__consumer_offsets-38,__consumer_offsets-13,__consumer_offsets-8,__consumer_offsets-21,__consumer_offsets-4,__consumer_offsets-27,__consumer_offsets-7,__consumer_offsets-9,__consumer_offsets-46,__consumer_offsets-41,__consumer_offsets-33,__consumer_offsets-23,__consumer_offsets-49,__consumer_offsets-47,__consumer_offsets-16,__consumer_offsets-28,__consumer_offsets-31,__consumer_offsets-36,__consumer_offsets-42,__consumer_offsets-3,__consumer_offsets-18,__consumer_offsets-15,__consumer_offsets-24,__consumer_offsets-17,__consumer_offsets-48,__consumer_offsets-19,__consumer_offsets-11,__consumer_offsets-2,__consumer_offsets-43,__consumer_offsets-6,__consumer_offsets-14,__consumer_offsets-20,__consumer_offsets-0,__consumer_offsets-44,__consumer_offsets-39,__consumer_offsets-12,__consumer_offsets-45,__consumer_offsets-1,__consumer_offsets-5,__consumer_offsets-26,__consumer_offsets-29,__consumer_offsets-34,__consumer_offsets-10,__consumer_offsets-32,__consumer_offsets-40 (kafka.controller.KafkaController)
[2025-07-09 10:33:40,439] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2025-07-09 10:33:40,439] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2025-07-09 10:33:40,442] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2025-07-09 10:33:40,443] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2025-07-09 10:38:40,443] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2025-07-09 10:38:40,443] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2025-07-09 10:38:40,445] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2025-07-09 10:38:40,445] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2025-07-09 10:43:40,445] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2025-07-09 10:43:40,445] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2025-07-09 10:43:40,447] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2025-07-09 10:43:40,447] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2025-07-09 10:48:40,448] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2025-07-09 10:48:40,448] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2025-07-09 10:48:40,449] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2025-07-09 10:48:40,449] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2025-07-09 10:53:40,449] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2025-07-09 10:53:40,449] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2025-07-09 10:53:40,450] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2025-07-09 10:53:40,450] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2025-07-09 10:58:40,451] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2025-07-09 10:58:40,451] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2025-07-09 10:58:40,452] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2025-07-09 10:58:40,452] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
